1̶.̶ S̶e̶c̶u̶r̶e̶ V̶e̶r̶s̶i̶o̶n̶ -̶ P̶r̶e̶v̶e̶n̶t̶ e̶x̶f̶i̶l̶i̶t̶r̶a̶t̶i̶o̶n̶ o̶f̶ b̶i̶t̶s̶:̶ R̶a̶n̶d̶o̶m̶ N̶o̶i̶s̶e̶ -̶ D̶e̶l̶a̶y̶s̶ b̶y̶ A̶d̶m̶i̶n̶

2. Collect Statistics: Send a random bit pattern of size N and measure the error rate in bits received. 
   Experiment with different values of N so that we observe a steady bit rate across experiments. 
   Develop Send and Receive methods.   
      Sending method places from the sending end buffer into the channel. 
      Receive method puts the sensed data bit into the receiving end buffer.  
         Send and Receive method should be scheduled every t time period.  
         The Receive method should be scheduled after a delay of d (e.g. t/2) 
            after Send method so that the covert channel mechanism can send and receive bits with minimum errors. 
   Study the error rate under various conditions of t and d. 
   Study the efficacy of the covert channel prevention method and redesign the prevention method as needed. 
   (Some of the methods to be tried are random delay vs constant delay vs distributions to be used to introduce noise into the channel.)

3. Possibly create a demo with 16 bit input size entered from the keyboard and displayed at the receiving end.   
      Send set 16 bit user input string (1's and 0's) show same string on receiving end
      
WORK ON WRITING THESIS IN PARALLEL

Error Correcting Codes are available for reasonable error rates

Network Implementation: Simulating Network Connection
   Does this alter receiving data?
   Comparing old prototype -> new prototype: is this possible over a network connection?


Prevention Method for DHT Table would be TOR Protocol -> Slow?

1. Automation
2. Tables and Stats
3. Network Connection 

inputBuffer: x
Received Bit: x
outputBuffer: x